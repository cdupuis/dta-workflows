name: build-push

on:
  workflow_call:
    inputs:
      file:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
      intoto-statements:
        required: false
        type: string
    secrets:
      docker_hub_user:
        required: true  
      docker_hub_password:
        required: true

env:
  dockerfile: ${{ inputs.dockerfile || inputs.file }}

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3        

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_hub_user }}
          password: ${{ secrets.docker_hub_password }}

      - name: Extract Docker metadata
        id: metadata
        uses: cdupuis/dta-workflows@main
        with:
          stage: metadata-attest
          file: ${{ inputs.file }}

      - name: Build Docker image
        id: build-and-push
        uses: docker/build-push-action@v6     
        with:
          context: .
          file: ${{ env.dockerfile }}
          push: false
          tags: ${{ env.DTA_IMAGE_TAGS }}
          sbom: generator=docker/scout-sbom-indexer:1
          platforms: ${{ env.DTA_IMAGE_PLATFORMS }}
          outputs: type=oci,dest=./oci,tar=false,compression=gzip,compression-level=9,force-compression=true,rewrite-timestamp=true
          build-args: SOURCE_DATE_EPOCH=0

      - name: Log into refrerrer registry
        uses: docker/login-action@v3
        with:
          registry: registry.scout.docker.com
          username: ${{ secrets.docker_hub_user }}
          password: ${{ secrets.docker_hub_password }}

      - name: Sign and attest in-toto statements
        if: ${{ inputs.intoto-statements != '' }}
        id: predicate-attest
        uses: cdupuis/dta-workflows@main
        with:
          stage: predicate-attest
          image: ./oci
          tags: ${{ env.DTA_IMAGE_TAGS }}
          organization: ${{ secrets.docker_hub_user }}
          intoto-statements: ${{ inputs.intoto-statements }}

      - name: Sign and attest Docker image
        id: sign-attest
        uses: cdupuis/dta-workflows@main
        with:
          stage: sign-attest
          image: ./oci
          file: ${{ env.dockerfile }}
          tags: ${{ env.DTA_IMAGE_TAGS }}
          organization: ${{ secrets.docker_hub_user }}

      - name: Verify and attest Docker image
        id: verify-attest
        uses: cdupuis/dta-workflows@main
        with:
          stage: verify-attest
          image: ${{ env.DTA_IMAGE_IMAGE }}
          tags: ${{ env.DTA_IMAGE_TAGS }}
          organization: ${{ secrets.docker_hub_user }}
